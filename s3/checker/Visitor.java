package enshud.s3.checker;

public interface Visitor {
    void visit(TerminalNode terminalNode) throws SemanticException;
	void visit(NonTerminalNode nonTerminalNode) throws SemanticException;
    void visit(ProgramNode programNode) throws SemanticException;
    void visit(BlockNode blockNode) throws SemanticException;
    void visit(VariableDeclarationNode variableDeclarationNode) throws SemanticException;
    void visit(VariableDeclarationSequenceNode variableDeclarationSequenceNode) throws SemanticException;
    void visit(VariableNameSequenceNode variableNameSequenceNode) throws SemanticException;
    void visit(TypeNode typeNode) throws SemanticException;
    void visit(ArrayTypeNode arrayTypeNode) throws SemanticException;
    void visit(IndexMinValueNode indexMinValueNode) throws SemanticException;
    void visit(IndexMaxValueNode indexMaxValueNode) throws SemanticException;
    void visit(IntegerNode integerNode) throws SemanticException;
    void visit(SubprogramDeclarationSequenceNode subprogramDeclarationSequenceNode) throws SemanticException;
    void visit(SubprogramDeclarationNode subprogramDeclarationNode) throws SemanticException;
    void visit(SubprogramHeadNode subprogramHeadNode) throws SemanticException;
    void visit(FormalParameterNode formalParameterNode) throws SemanticException;
    void visit(FormalParameterSequenceNode formalParameterSequenceNode) throws SemanticException;
    void visit(FormalParameterNameSequenceNode formalParameterNameSequenceNode) throws SemanticException;
    void visit(CompoundStatementNode compoundStatementNode) throws SemanticException;
    void visit(StatementSequenceNode statementSequenceNode) throws SemanticException;
    void visit(StatementNode statementNode) throws SemanticException;
    void visit(BasicStatementNode basicStatementNode) throws SemanticException;
    void visit(AssignmentStatementNode assignmentStatementNode) throws SemanticException;
    void visit(LeftHandSideNode leftHandSideNode) throws SemanticException;
    void visit(VariableNode variableNode) throws SemanticException;
    void visit(PureVariableNode pureVariableNode) throws SemanticException;
    void visit(IndexedVariableNode indexedVariableNode) throws SemanticException;
    void visit(IndexNode indexNode) throws SemanticException;
    void visit(ProcedureCallStatementNode procedureCallStatementNode) throws SemanticException;
    void visit(ExpressionSequenceNode expressionSequenceNode) throws SemanticException;
    void visit(ExpressionNode expressionNode) throws SemanticException;
    void visit(SimpleExpressionNode simpleExpressionNode) throws SemanticException;
    void visit(TermNode termNode) throws SemanticException;
    void visit(FactorNode factorNode) throws SemanticException;
    void visit(InputOutputStatementNode inputOutputStatementNode) throws SemanticException;
    void visit(VariableSequenceNode variableSequenceNode) throws SemanticException;
}