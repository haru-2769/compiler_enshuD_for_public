package enshud.s3.checker;

public interface Visitor {
    void visit(TerminalNode terminalNode);
	void visit(NonTerminalNode nonTerminalNode);
    void visit(ProgramNode programNode);
    void visit(BlockNode blockNode);
    void visit(VariableDeclarationNode variableDeclarationNode);
    void visit(VariableDeclarationSequenceNode variableDeclarationSequenceNode);
    void visit(VariableNameSequenceNode variableNameSequenceNode);
    void visit(TypeNode typeNode);
    void visit(ArrayTypeNode arrayTypeNode);
    void visit(IndexMinValueNode indexMinValueNode);
    void visit(IndexMaxValueNode indexMaxValueNode);
    void visit(IntegerNode integerNode);
    void visit(SubprogramDeclarationSequenceNode subprogramDeclarationSequenceNode);
    void visit(SubprogramDeclarationNode subprogramDeclarationNode);
    void visit(SubprogramHeadNode subprogramHeadNode);
    void visit(FormalParameterNode formalParameterNode);
    void visit(FormalParameterSequenceNode formalParameterSequenceNode);
    void visit(FormalParameterNameSequenceNode formalParameterNameSequenceNode);
    void visit(CompoundStatementNode compoundStatementNode);
    void visit(StatementSequenceNode statementSequenceNode);
    void visit(StatementNode statementNode);
    void visit(BasicStatementNode basicStatementNode);
    void visit(AssignmentStatementNode assignmentStatementNode);
    void visit(LeftHandSideNode leftHandSideNode);
    void visit(VariableNode variableNode);
    void visit(PureVariableNode pureVariableNode);
    void visit(IndexedVariableNode indexedVariableNode);
    void visit(IndexNode indexNode);
    void visit(ProcedureCallStatementNode procedureCallStatementNode);
    void visit(ExpressionSequenceNode expressionSequenceNode);
    void visit(ExpressionNode expressionNode);
    void visit(SimpleExpressionNode simpleExpressionNode);
    void visit(TermNode termNode);
    void visit(FactorNode factorNode);
    void visit(InputOutputStatementNode inputOutputStatementNode);
    void visit(VariableSequenceNode variableSequenceNode);
}